name: "update"

on:
  push:
    branches:
      - "master"
  schedule:
    - cron: '0 6/12 * * *'
  workflow_dispatch:

jobs:
  single-instance:
    name: "Run single instance only"
    runs-on: "ubuntu-latest"
    timeout-minutes: 1
    steps:
      - name: 'Block Concurrent Executions'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-jdkforests:
    name: "Update JDK forests"
    runs-on: "ubuntu-20.04"
    needs: single-instance
    steps:
      - name: Downgrade git
        run: |
          # workaround for:
          # https://public-inbox.org/git/20200605224342.GF6569@camp.crustytoothpaste.net/t/
          git --version
          apt-cache policy git
          sudo apt-get install --allow-downgrades git=1:2.25.1-1ubuntu3 git-man=1:2.25.1-1ubuntu3
          git --version
      - uses: actions/checkout@v2
      - name: Checkout jdkforest-corba mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-corba
          ssh-key: ${{ secrets.JDKFOREST_CORBA_PRIV_KEY }}
          path: jdkforest-corba
          fetch-depth: '0'
      - name: Checkout jdkforest-hotspot mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-hotspot
          ssh-key: ${{ secrets.JDKFOREST_HOTSPOT_PRIV_KEY }}
          path: jdkforest-hotspot
          fetch-depth: '0'
      - name: Checkout jdkforest-jaxp mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-jaxp
          ssh-key: ${{ secrets.JDKFOREST_JAXP_PRIV_KEY }}
          path: jdkforest-jaxp
          fetch-depth: '0'
      - name: Checkout jdkforest-jaxws mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-jaxws
          ssh-key: ${{ secrets.JDKFOREST_JAXWS_PRIV_KEY }}
          path: jdkforest-jaxws
          fetch-depth: '0'
      - name: Checkout jdkforest-jdk mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-jdk
          ssh-key: ${{ secrets.JDKFOREST_JDK_PRIV_KEY }}
          path: jdkforest-jdk
          fetch-depth: '0'
      - name: Checkout jdkforest-langtools mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-langtools
          ssh-key: ${{ secrets.JDKFOREST_LANGTOOLS_PRIV_KEY }}
          path: jdkforest-langtools
          fetch-depth: '0'
      - name: Checkout jdkforest-nashorn mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-nashorn
          ssh-key: ${{ secrets.JDKFOREST_NASHORN_PRIV_KEY }}
          path: jdkforest-nashorn
          fetch-depth: '0'
      - name: Checkout jdkforest-root mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/jdkforest-root
          ssh-key: ${{ secrets.JDKFOREST_ROOT_PRIV_KEY }}
          path: jdkforest-root
          fetch-depth: '0'
      - name: Update mirrors
        run: |
          set -eux
          . ./update-funcs.sh
          setup_git_plugin
          init_forest_mirrors
          export GH_CHANGES_ENV="MIRROR_CHANGES"
          update_forest_mirrors "jdk7/jdk7" "jdk7u/jdk7u" "jdk7u/jdk7u-dev" "jdk8/jdk8" "jdk8u/jdk8u" "jdk8u/jdk8u-dev" "aarch64-port/jdk8" "aarch64-port/jdk8u" "shenandoah/jdk8" "aarch64-port/jdk8u-shenandoah" "aarch32-port/jdk8u"
      - name: Pack hg files
        if: ${{ env.MIRROR_CHANGES == '1' }}
        run: |
          set -eux
          . ./update-funcs.sh
          pack_hg_forest_mirrors
          echo "HG_ARCHIVES=1" >> $GITHUB_ENV
      - name: Upload hg files
        uses: eine/tip@master
        if: ${{ env.HG_ARCHIVES == '1' }}
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            hg-jdkforest-corba.tar.xz
            hg-jdkforest-hotspot.tar.xz
            hg-jdkforest-jaxp.tar.xz
            hg-jdkforest-jaxws.tar.xz
            hg-jdkforest-jdk.tar.xz
            hg-jdkforest-langtools.tar.xz
            hg-jdkforest-nashorn.tar.xz
            hg-jdkforest-root.tar.xz

  update-hg-jdk:
    name: "Update mercurial JDK mirror"
    runs-on: "ubuntu-20.04"
    needs: single-instance
    steps:
      - name: Downgrade git
        run: |
          # workaround for:
          # https://public-inbox.org/git/20200605224342.GF6569@camp.crustytoothpaste.net/t/
          git --version
          apt-cache policy git
          sudo apt-get install --allow-downgrades git=1:2.25.1-1ubuntu3 git-man=1:2.25.1-1ubuntu3
          git --version
      - uses: actions/checkout@v2
      - name: Checkout hg-jdk mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/hg-jdk
          ssh-key: ${{ secrets.HG_JDK_PRIV_KEY }}
          path: hg-jdk
          fetch-depth: '0'
      - name: Update mirror
        run: |
          set -eux
          . ./update-funcs.sh
          setup_git_plugin
          init_jdk_mirror
          export GH_CHANGES_ENV="MIRROR_CHANGES"
          update_jdk_mirror "jdk/jdk11" "jdk-updates/jdk11u" "jdk-updates/jdk11u-dev" "shenandoah/jdk11"
      - name: Pack hg files
        if: ${{ env.MIRROR_CHANGES == '1' }}
        run: |
          set -eux
          . ./update-funcs.sh
          pack_hg_jdk_mirror
          echo "HG_ARCHIVES=1" >> $GITHUB_ENV
      - name: Save hg assets
        if: ${{ env.HG_ARCHIVES == '1' }}
        uses: eine/tip@master
        timeout-minutes: 15
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            hg-hg-jdk.tar.xz
      # workaround: upload sometimes hangs, if so try second attempt
      - name: Check failures
        if: ${{ failure() && env.HG_ARCHIVES == '1' }}
        run: |
          tmp_archive_url="https://github.com/ojdk-qa/autoupdater/releases/download/hg-files-latest/tmp.hg-hg-jdk.tar.xz"
          echo "REUPLOAD_ASSETS=1" >> $GITHUB_ENV
          if ! curl -s -I "${tmp_archive_url}" | head -n 1 | grep -q '404 Not Found' ; then
              echo "REMOVE_TMP_ASSET=1" >> $GITHUB_ENV
          fi
      - name: Remove failed tmp asset
        if: ${{ failure() && env.REMOVE_TMP_ASSET == '1' }}
        uses: mknejp/delete-release-assets@v1
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          assets: tmp.hg-hg-jdk.tar.xz
      - name: Reupload hg assets
        if: ${{ failure() && env.REUPLOAD_ASSETS == '1' }}
        uses: eine/tip@master
        timeout-minutes: 15
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            hg-hg-jdk.tar.xz
      # workaround: upload sometimes hangs, if so try another attempt
      - name: Check failures 2
        if: ${{ failure() && env.REUPLOAD_ASSETS == '1' }}
        run: |
          tmp_archive_url="https://github.com/ojdk-qa/autoupdater/releases/download/hg-files-latest/tmp.hg-hg-jdk.tar.xz"
          if ! curl -s -I "${tmp_archive_url}" | head -n 1 | grep -q '404 Not Found' ; then
              echo "REMOVE_TMP_ASSET=1" >> $GITHUB_ENV
              echo "REUPLOAD_ASSETS=1" >> $GITHUB_ENV
          else
              echo "REMOVE_TMP_ASSET=0" >> $GITHUB_ENV
              echo "REUPLOAD_ASSETS=0" >> $GITHUB_ENV
          fi
      - name: Remove failed tmp asset 2
        if: ${{ failure() && env.REMOVE_TMP_ASSET == '1' }}
        uses: mknejp/delete-release-assets@v1
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          assets: tmp.hg-hg-jdk.tar.xz
      - name: Reupload hg assets 2
        if: ${{ failure() && env.REUPLOAD_ASSETS == '1' }}
        uses: eine/tip@master
        timeout-minutes: 15
        with:
          tag: hg-files-latest
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            hg-hg-jdk.tar.xz

  update-git-jdk:
    name: "Update git JDK mirror"
    runs-on: "ubuntu-latest"
    needs: single-instance
    steps:
      - uses: actions/checkout@v2
      - name: Checkout git-jdk mirror
        uses: actions/checkout@v2
        with:
          repository: ojdk-qa/git-jdk
          ssh-key: ${{ secrets.GIT_JDK_PRIV_KEY }}
          path: git-jdk
      - name: Update mirror
        run: |
          set -eux
          . ./update-funcs.sh
          update_git_jdk_mirror "jdk"
